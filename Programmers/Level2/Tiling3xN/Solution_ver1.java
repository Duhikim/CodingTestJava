package CodingTestStudy.Level2.Tiling3xN;

class Solution_ver1 {

	public int solution(int n) {
		/**************
		 입력은 5000 이하의 자연수이지만, 홀수 인 경우 두 칸 짜리 블록으로 채울 수 있는 방법은 없다.
		 문제에 주어지지는 않았으나 짝수만 입력하라는 조건은 없으므로 홀수인 경우 0을 리턴함.

		 입력값이 n일때의 답을 f(n)이라고 하면,
		 f(2) = 3 : 가로 블록이 위에있는경우, 아래있는경우, 세줄 다 가로인 경우 세가지.-||, ||-, ---
		 f(4) = f(2)*f(2) + 2 : 두 칸 나눠서 채우는 방법 + 한번에 끊김없이 채우는 방법
		 f(6) 부터 경우의 수가 추가된다. 2/4로 나누는것, 4/2로 나누는것, 2/2/2로 나누는것, 6칸 모두 안나뉘는 것.
		 f(6) = f(2)*f(2)*f(2) + 2 * f(2) * 2 + 2
		 대충 앞에서 0칸채웠을때 뒤 6칸을 끊김없이 채우는 방법 + 2칸 채웠을 때 뒤 4칸을 끊김없이 채우는 방법 + 4칸 채웠을때 뒤 2칸을 끊김없이 채우는 방법이면 모든 경우의 수를 다 고려하는 듯.


		 *************/
		if(n%2==1) return 0;
		int mod = 1_000_000_007;
		long[] dp = new long[n+1];

		dp[0] = 1;
		dp[2] = 3;
		for(int i=4; i<=n; i+=2){
			dp[i] += dp[i-2] * 3 % mod;
			for(int j=4; j<=i; j+=2){
				dp[i] += dp[i-j] * 2 % mod;
			}
		}


		return (int)(dp[n]%mod);
	}
}